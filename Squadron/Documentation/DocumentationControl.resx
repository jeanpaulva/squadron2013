<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ExportToHTMLButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEIAAABSCAIAAABv4JUkAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAA+JJREFUeF7tmDtOKzEUhrOZ3JY+oqSORJk69DSUtEgsIKwgK8gKkKjTgohoqFgA
        LCD3w79zcDwTJpfrTGzkr3B8jo/H5/djHhm8vr4+Fw4SBvysCwcJVUY2VBk5UWXkRJWREx0y7u/vb7aZ
        zWa+LSc6ZJyeng4GA0rj/Pzct/XCx8cHc0fp7R10yxgOh944Bsvlknmk9PYOfihjtVpFl8bUnNGkynw+
        ZyIpXfsWtlcJ9i6Hrvn29kbTYrGgle7IoKQpCg75oQxd3c4JoxLG8NTpcnV1pY6U2pMKA1KxJkpap9Op
        b1uv8XBNSiCADUyFGHm+2c97yXAT5/EN67XGYOLJTDHyq4slR1qhYFpBgiFqpSPIVAyLQEC08k26Zdhk
        CFtZhsEkXfQQJie4PL9MIEwe+oZJC2tVPVwcSCaDS3ujASvAGMBe9642GebR3Ec50WRDUAkXHHKUofi8
        ZGhTMapL8ivvyATCdDqVU3TvCuOPIMOOBEvBSDY8zjBXbSQzuZolDbrjha2tMqLj1KRbBlehNDSvSs72
        EueSDOyGSx0Ur+4KAzJWK13UGp5p/JEMUDzBGrqVDhn2nArBj4xwhhCAX6o+c3e3VJ4eDByGCQUTgwBb
        B2EXCeH+pkvxQPSuBh0yfoBkeKMvqowdsFXC7d4P6WUchSojJ6qMnKgycqLK2AEvP+CNvkgvo/iXEfvX
        Q+/VYB/uvMlaE2tl/lQkXg3etJUrFdAfVlT0XcE3kOlJqySxDHDLsLWpSDp8WdTXb9rXx4PL0Cdu9DFE
        AEq8kYKDy9COiv4TKE8Gh+E3yOAoI4OPaW+7//oLOBvkR5Z8/rMCulNxh0XJbDbjcOPUUlBXfBLSy2D6
        yZK8Ke2uKm0CGdEe+3/SyxCtjwWyT7sIxqFk9EyVkRNVRk58ynh5eeGnaJAweHp68laxIOFzU/0pHCRU
        GdlQZeRElZETVUZO7CXj7Ozs4eHh+vra2xv4UpWTCgFN5vM5rZPJRCbXcf1i1P329lYm1/wmuJW9ZIzH
        4/f3dxvGeHx8lJNSkBCRd3d3MiWSCk6CaXX9tri8vKQVSF0exTOozH1II8NozUBOVob40WjkvRvQBjSV
        IePi4qIZz86xpjJk4NSse6+DJVL2/cnQSCFNbd/L4KxTofQNLnudn5JkUOcirIn8CMBUvT8ZUcbA2P8q
        g5sYvXTQyVt3ZChMBgLUK9pghckAHXRKyxvKk2HPOx1u0ZRBGF1E82kTcQQZQEfwhgPTZCCP+JBw3VrZ
        SwaQxMnJiTc2NJ2YkQZoOnnqRa9MmOGUEx8SBTfZV0bmVBk5UWXkxO+SUTzPz38BPLSGPSvKh5UAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>